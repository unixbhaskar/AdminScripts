Delivered-To: unixbhaskar@gmail.com
Received: by 2002:a19:8c56:0:0:0:0:0 with SMTP id i22csp1896169lfj;
        Thu, 26 Sep 2019 03:31:02 -0700 (PDT)
X-Google-Smtp-Source: APXvYqzj6+HbLCWNIw/uVj+enEoHMBc/llESfBJ28nxkqIM+kml8Kal8k4H5n/U4Nmc31vQLo9/a
X-Received: by 2002:a17:906:8c8:: with SMTP id o8mr2478403eje.56.1569493862759;
        Thu, 26 Sep 2019 03:31:02 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1569493862; cv=none;
        d=google.com; s=arc-20160816;
        b=MfpyHT5kjrhLOF8evfs2Bsbx+YnM/feG740o6X1/Hw4xLIYMhMw1TdF1ojxDpdV3dd
         LSW6TrXK5r1sdtkXMmDri0udRn0LMbYZVSv/qFGFcxyGPc7OKmDzOuCeKrv5i2H444+v
         jPoz8ByyCch95l8bCzJZG90ZTxlvuEUH4tWKYipSFMRuwAA18zapEJii1AdfksSW5MUr
         5d8RsIupIjSTe+Em1XL1HMDNjs2qp9vWO0DNI8sC5I8/8e5eX3jKKlg4TGehsUcigOb7
         YznWWKEJTUjggG5xQZKQy7UT2n83bTCpK6YPtwr/0LkQa1EnnR28cmL4+c+Qnq9KLAIA
         Kxsg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :message-id:subject:cc:to:from:date;
        bh=fvlvxiQI0AtQFnFhPorVyoW1uKHa5KQZyB5nZoQ8Shk=;
        b=oW+EMXDfkKFTnJ9KLBLTMHHLWsqhBRq/x5DC8mzjViVl+dv66/bbBh/JSxJrSrlfxP
         8RO7Rp95dw4fuBxeFg+pvDKlUWo42fhK0lLWCf41YePDIJ5AAODmFjcIu8vu5zN7nlY4
         rJVpzYXSiXG/fNqGVkp+JKAUuuwY3FMV4xDBuFB/EmpSW1LhegwVPUyfkMsE9DCKLBIc
         N+ZvhOXcEIuDeZZDMy87LKrNc4YCXGv00Ki+Tq7OUThPB+NfLzWxcEZvPrVg/eSX60lO
         i9xSVsCCrkGSN5+rGInzPAsA50ZPxIV7jqQGaeQqL5T5J5zSHm4PBUX0u7ciL/d6YH21
         Xkmw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Return-Path: <linux-kernel-owner@vger.kernel.org>
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id n6si945694edq.228.2019.09.26.03.30.38;
        Thu, 26 Sep 2019 03:31:02 -0700 (PDT)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Authentication-Results: mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730073AbfIZJJd (ORCPT <rfc822;diweiguang88@gmail.com>
        + 99 others); Thu, 26 Sep 2019 05:09:33 -0400
Received: from mail.kernel.org ([198.145.29.99]:51320 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725890AbfIZJJc (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 26 Sep 2019 05:09:32 -0400
Received: from oasis.local.home (unknown [65.39.69.237])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id EC340222C0;
        Thu, 26 Sep 2019 09:09:30 +0000 (UTC)
Date:   Thu, 26 Sep 2019 05:09:26 -0400
From:   Steven Rostedt <rostedt@goodmis.org>
To:     Linus Torvalds <torvalds@linux-foundation.org>
Cc:     LKML <linux-kernel@vger.kernel.org>,
        Ingo Molnar <mingo@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Masami Hiramatsu <mhiramat@kernel.org>,
        Srikar Dronamraju <srikar@linux.vnet.ibm.com>
Subject: [GIT PULL] tracing/probe: Fix same probe event argument matching
Message-ID: <20190926050926.03f37f77@oasis.local.home>
X-Mailer: Claws Mail 3.17.3 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


Linus,

Srikar Dronamraju fixed a bug in the new multi probe code.


Please pull the latest trace-v5.4-2 tree, which can be found at:


  git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
trace-v5.4-2

Tag SHA1: ba75d3b05b6e1e995b9c934f8e387c93e879c18b
Head SHA1: f8d7ab2bded897607bff6324d5c6ea6b4aecca0c


Srikar Dronamraju (1):
      tracing/probe: Fix same probe event argument matching

----
 kernel/trace/trace_kprobe.c | 5 +++--
 kernel/trace/trace_uprobe.c | 5 +++--
 2 files changed, 6 insertions(+), 4 deletions(-)
---------------------------
commit f8d7ab2bded897607bff6324d5c6ea6b4aecca0c
Author: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
Date:   Tue Sep 24 17:19:06 2019 +0530

    tracing/probe: Fix same probe event argument matching
    
    Commit fe60b0ce8e73 ("tracing/probe: Reject exactly same probe event")
    tries to reject a event which matches an already existing probe.
    
    However it currently continues to match arguments and rejects adding a
    probe even when the arguments don't match. Fix this by only rejecting a
    probe if and only if all the arguments match.
    
    Link: http://lkml.kernel.org/r/20190924114906.14038-1-srikar@linux.vnet.ibm.com
    
    Fixes: fe60b0ce8e73 ("tracing/probe: Reject exactly same probe event")
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>

diff --git a/kernel/trace/trace_kprobe.c b/kernel/trace/trace_kprobe.c
index a6697e28ddda..402dc3ce88d3 100644
--- a/kernel/trace/trace_kprobe.c
+++ b/kernel/trace/trace_kprobe.c
@@ -549,10 +549,11 @@ static bool trace_kprobe_has_same_kprobe(struct trace_kprobe *orig,
 		for (i = 0; i < orig->tp.nr_args; i++) {
 			if (strcmp(orig->tp.args[i].comm,
 				   comp->tp.args[i].comm))
-				continue;
+				break;
 		}
 
-		return true;
+		if (i == orig->tp.nr_args)
+			return true;
 	}
 
 	return false;
diff --git a/kernel/trace/trace_uprobe.c b/kernel/trace/trace_uprobe.c
index 34dd6d0016a3..dd884341f5c5 100644
--- a/kernel/trace/trace_uprobe.c
+++ b/kernel/trace/trace_uprobe.c
@@ -431,10 +431,11 @@ static bool trace_uprobe_has_same_uprobe(struct trace_uprobe *orig,
 		for (i = 0; i < orig->tp.nr_args; i++) {
 			if (strcmp(orig->tp.args[i].comm,
 				   comp->tp.args[i].comm))
-				continue;
+				break;
 		}
 
-		return true;
+		if (i == orig->tp.nr_args)
+			return true;
 	}
 
 	return false;
