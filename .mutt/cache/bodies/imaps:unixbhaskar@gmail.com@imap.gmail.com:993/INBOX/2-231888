Delivered-To: unixbhaskar@gmail.com
Received: by 2002:ac2:46ee:0:0:0:0:0 with SMTP id q14csp18479lfo;
        Thu, 2 Apr 2020 16:45:30 -0700 (PDT)
X-Google-Smtp-Source: APiQypKR4DCJ7RwQrlGNto3ZHKTO1grxvGRe9O6vFwxAa6ZUceuxvbf+iHg7AAGMHQV5MvParNJV
X-Received: by 2002:a05:6830:1dfa:: with SMTP id b26mr4207370otj.13.1585871129907;
        Thu, 02 Apr 2020 16:45:29 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1585871129; cv=none;
        d=google.com; s=arc-20160816;
        b=ZDV3vpRQyDNab6vSCTKCFWd4jgZuJuYnWeP0nOkHNCIO1d/lvjSegNn6t5EeRDhxOd
         9KEQNgAyVZKTSpFAtFraBdf7ZYnFnGhqjTCdAInKDRDVBbr2HhuEmgMI0u24B/rBHsi5
         rHEcgmtJMMLzh3NlAUSpOdVAmsN7/sukmEx24HCoTHmrvSAr8dT69g09vg6bYxuXcY43
         kearTkdCbWE5B4A7s44Ay9y5ONeHnw7uZ2DY5SzkjYjWc6E/LMUVTpl2sSOZEMhkAWu2
         sg6+/gUCSbG4aUdBXrbGu3O4X5wk+McpCphbEgfnKmjgPx1TEybrdAlm70ILOlOgvWb2
         z3NQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:dkim-signature;
        bh=suq7shsCYCEkha3tF10l6ky5KLq5d+L/cVszRe1OWJY=;
        b=QPb9rixMyQtGkj8HFkmIVOiWyOU0NNp2URVu8kKavLmtXk4KXCorxZ+h05R4cpNNOZ
         YpNET8+PExoRHvmCy2+1sCUQrY3MnvdY8gTrYt3D/WSQAG5FxUA61bkNMksKZt+lA7jH
         CYPNQG3093c4MiOVramXe5mn5EMQTqhUo2tcPl8U0eNBoJQSdH7BAR41HE+6zS98TkzT
         Luxs8Ax2i46ddtiokgypMGOF7dERTsenuVXqghOek0I8kXInVy7/K0OXYpFCJd6v4arK
         n8zhgBTYdc2ZxmT2RrVwKptxjOW+pPFpRmeZbcIHiah45da1v+ri7W8TqMY+GmaZ/OXn
         Z3gQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linux-foundation.org header.s=google header.b=NGLO3tsD;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Return-Path: <linux-kernel-owner@vger.kernel.org>
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id t132si2867024oih.173.2020.04.02.16.45.16;
        Thu, 02 Apr 2020 16:45:29 -0700 (PDT)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Authentication-Results: mx.google.com;
       dkim=pass header.i=@linux-foundation.org header.s=google header.b=NGLO3tsD;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390224AbgDBXog (ORCPT <rfc822;bluekernelvirtual@gmail.com>
        + 99 others); Thu, 2 Apr 2020 19:44:36 -0400
Received: from mail-lf1-f65.google.com ([209.85.167.65]:34210 "EHLO
        mail-lf1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2390172AbgDBXog (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 2 Apr 2020 19:44:36 -0400
Received: by mail-lf1-f65.google.com with SMTP id e7so4274237lfq.1
        for <linux-kernel@vger.kernel.org>; Thu, 02 Apr 2020 16:44:34 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linux-foundation.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=suq7shsCYCEkha3tF10l6ky5KLq5d+L/cVszRe1OWJY=;
        b=NGLO3tsDhJ1AssSXynspUzuMIiwe2LjVYg5MdUGKa4gKsk1GjxJIXG0vKRvCJBKmw3
         t0nRr62n7kdIahaA+z72gyTS9pSoM1H6Wu0eD6wD/e/YAYI6MCCs6PMt9mWP6FGMAg6c
         jeCO0yBhxbC2k2+H+GDRWDkvN5qkPv7nXbcsc=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=suq7shsCYCEkha3tF10l6ky5KLq5d+L/cVszRe1OWJY=;
        b=SXVr7kiuExMuGT4nCRh2Ab9tLHVHeT01EM0vOOTX66IvZaCwtBMY+j6xTrITKxKsL/
         NJ7uJBjghRCOuYuXakaKfs4Kw89gCSYPvAnCfG5UPkdTWKSbYNOmsZOPUXVBY92NPMh7
         IsrhGbv3mpedIta36guJYVXVkdXpYPLyNLzTP8mTyj/QGk/DdAQrdRRZGokknrbOK0U0
         m9JW1ef4hWfwZ0FlXSC09svxqbrDTMGBIz5TIvUrACd2TJGPJp2WKkVR25YHUPl0HnAr
         8FR4zyVq1/p1ssc2LPU3IIJoa9y+bJaeXeVmRU1XooyBDDnOtSzkaQQEfifkpuaJVw0P
         tViA==
X-Gm-Message-State: AGi0PuaV3RbzxuzFqnFNheI1GUP7v30AHYnYa8GOLvYmVNtHVWeqpYFL
        0SB9GE8xK2P3hTG7k0o/wjtBCZ6fuCo=
X-Received: by 2002:a05:6512:686:: with SMTP id t6mr3715624lfe.163.1585871072868;
        Thu, 02 Apr 2020 16:44:32 -0700 (PDT)
Received: from mail-lf1-f47.google.com (mail-lf1-f47.google.com. [209.85.167.47])
        by smtp.gmail.com with ESMTPSA id j2sm4805355lfm.44.2020.04.02.16.44.32
        for <linux-kernel@vger.kernel.org>
        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
        Thu, 02 Apr 2020 16:44:32 -0700 (PDT)
Received: by mail-lf1-f47.google.com with SMTP id j17so4233313lfe.7
        for <linux-kernel@vger.kernel.org>; Thu, 02 Apr 2020 16:44:32 -0700 (PDT)
X-Received: by 2002:ac2:5e70:: with SMTP id a16mr3624110lfr.152.1585871071646;
 Thu, 02 Apr 2020 16:44:31 -0700 (PDT)
MIME-Version: 1.0
References: <87blobnq02.fsf@x220.int.ebiederm.org> <CAHk-=wgYCUbEmwieOBzVNZbSAM9wCZA8Z0665onpNnEcC-UpDg@mail.gmail.com>
 <AM6PR03MB5170B606F9AC663225EC9609E4C60@AM6PR03MB5170.eurprd03.prod.outlook.com>
 <CAHk-=whM3r7zrm8mSi7HJhuZbYiXx9PFU5VQYeKm6Low=r15eQ@mail.gmail.com>
 <AM6PR03MB517003D5965F48AC5FE7283DE4C60@AM6PR03MB5170.eurprd03.prod.outlook.com>
 <CAHk-=wg5LvjumW9PVQiF7jB8yig98K8XTk4tHo9W-sYmxzW+9g@mail.gmail.com> <87lfnda3w3.fsf@x220.int.ebiederm.org>
In-Reply-To: <87lfnda3w3.fsf@x220.int.ebiederm.org>
From:   Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu, 2 Apr 2020 16:44:15 -0700
X-Gmail-Original-Message-ID: <CAHk-=wjuv_J+2KOi+Fhr_nBKYf5CXr76DQKThA3uxXm3rCC3Uw@mail.gmail.com>
Message-ID: <CAHk-=wjuv_J+2KOi+Fhr_nBKYf5CXr76DQKThA3uxXm3rCC3Uw@mail.gmail.com>
Subject: Re: [GIT PULL] Please pull proc and exec work for 5.7-rc1
To:     "Eric W. Biederman" <ebiederm@xmission.com>
Cc:     Bernd Edlinger <bernd.edlinger@hotmail.de>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Alexey Gladkov <gladkov.alexey@gmail.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Apr 2, 2020 at 4:04 PM Eric W. Biederman <ebiederm@xmission.com> wrote:
>
> That is not the direction I intend to take either.

Ahh, good. Because those kinds of "play games with dropping locks in
the middle based on conditionals" really have been horrible.

Yes, we've done it, and it's almost always been asource of truly subtle bugs.

> The exec_update_mutex is to be a strict subset of today's
> cred_guard_mutex.  I tried to copy cred_guard_mutex's unlock style so
> that was obvious and that turns out was messier than I intended.

Yes. That is why I had no problem pulling that subset, and my worries
were mainly about the explanations and that flag use.

> Since I thought I already knew what was in the patches and the worst
> problem was the missing unlock of cred_guard_mutex, and I know Bernd's
> patches had been tested I applied them.  I missed that Bernd had added
> the exec_mmap_called flag into my patch.  I thought he had only added
> the missing unlock.

Ahh, so you meant for all of that to be entirely static refactoring,
rather than the conditional unlock depending on just how far we had
gotten.

Good, that's generally the much superior approach.

I absolutely _hate_ the "drop and retake" model, unless it's a very
local case with a very explicit retry path.

In contrast, the "we have a flag that shows how far we've gotten"
_has_ been a successful model, and while I much prefer a static "lock
pairs with unlock", that "I have done this, so you need to unlock" is
not entirely out of the question when the static rules become too
complex to think about.

The vfs code has something similar in FMODE_OPENED which is basically
a flag saying "I actually made it all the way to the ->open()"
callback. We used to have a static model, but the rules for when we
can use fput(), and when we have to use fdrop() were too hard for
people.

> I spotted the weirdness in unlocking exec_update_mutex, and because it
> does fix a real world deadlock with ptrace I did not back it out from my
> tree.
>
> I have been much laxer on the details than I like to be my apologies.

Ok, as long as we have a sane plan..

And

> The plan is:
>         exec_udpate_mutex will cover just the subset of cred_guard_mutex
>         after the point of no return, and after we do any actions that
>         might block waiting for userspace to do anything.
>
>         So exec_update_mutex will just cover those things that exec
>         is updating, so if you want an atomic snapshot of them
>         plus the appropriate struct cred you can grab exec_update_mutex.
>
>         I added a new mutex instead of just fixing cred_guard_mutex so
>         that we can update or revert the individual code paths if it
>         is found that something is wrong.
>
>         The cred_guard_mutex also prevents other tasks from starting
>         to ptrace the task that is exec'ing, and other tasks from
>         setting no_new_privs on the task that is exec'ing.
>
>         My plan is to carefully refactor the code so it can perform
>         both the ptrace and no_new_privs checks after the point of
>         no return.

Ok. Sounds good.

> I have uncovered all kinds of surprises while working in that direction
> and I realize it is going to take a very delicate and careful touch to
> achieve my goal.
>
> There are silly things like normal linux exec when you are ptraced and
> exec changes the credentials the ordinary code will continue with the
> old credentials, but the an LSM enabled your process is likely to be
> killed instead.

Yeah. The "continue with old credentials" is actually very traditional
and the original behavior, and is useful for handling the case of
debugging something that is suid, but doesn't necessarily _require_
it.

But the LSM's just say yes/no.

I have this dim memory that it also triggers when you do the debugging
as root, but that may be some medication-induced memory.

> There is the personal mind blowing scenario where selinux will increase
> your credentials upon exec but if a magic directive is supplied in it's
> rules will avoid setting AT_SECURE, so that userspace won't protect
> itself from hostile takeover from the pre credential change environment.
> Much to my surprise "noatsecure" is a known and documented feature of
> selinux.  I am not certain but I think I even spotted it in use on
> production.

We have had a _ton_ of random small rules so that people could enable
SElinux in legacy environments.

They are _probably_ effectively dead code in this day and age, but
it's hard to tell...

            Linus
